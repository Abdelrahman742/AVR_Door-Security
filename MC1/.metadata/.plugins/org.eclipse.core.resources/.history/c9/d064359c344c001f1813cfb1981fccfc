/*
 * Main.c
 *
 *  Created on: Jul 6, 2024
 *      Author: dell

#include<avr/io.h>
#include "lcd.h"
#include "keypad.h"
#include "uart.h"
#include <util/delay.h>

#define GET_READY 			0x10

// Function prototypes
void createPassword();
void mainMenu();
void openDoor();
void changePassword();
void requestPassword(uint8* password);

int main()
{
    // Initialize LCD, Keypad, and UART
	UART_ConfigType UART_Configurations = {BITS8,EVEN_PARITY,STOP_1BIT,BDR6};
	LCD_init();
	UART_init(&UART_Configurations);

    // Password creation
    createPassword();

    // Main options loop
    while (1)
    {
        mainMenu();
    }
}

void createPassword()
{
	uint8 i;
    uint8 password1[6] = {0};
    uint8 password2[6] = {0};

    while (1)
    {
    	LCD_displayString("plz enter pass:");
    	LCD_moveCursor(1,0);
    	requestPassword(password1);
    	LCD_clearScreen();
		LCD_displayStringRowColumn(0,0,"plz re-enter the");
		LCD_displayStringRowColumn(1,0,"same pass:");
    	LCD_moveCursor(1,10);

		for(i=0;i<10;i++)
		{
			password2[i]=KEYPAD_getPressedKey();
			if(KEYPAD_getPressedKey() == '=')
			{
				break;
			}
			else
			{
				LCD_displayCharacter('*');
				_delay_ms(500);
			}
		}

        if (strcmp(password1, password2) == 0)
        {
            // Send password to Control_ECU
        	UART_sendString(password1);
            break;
        }
        else
        {
        	LCD_clearScreen();
            LCD_displayString("Pass don't match");
            _delay_ms(1000);
        }
    }
}

void mainMenu()
{
	LCD_clearScreen();
    LCD_displayString("+: Open Door");
    LCD_moveCursor(1,0);
    LCD_displayString("-: Change Password");

    uint8 key = KEYPAD_getPressedKey();
    if (key == '1')
    {
        openDoor();
    }
    else if (key == '2')
    {
        changePassword();
    }
}

void openDoor()
{
    uint8 password[6] = {0};
    LCD_displayString("plz enter pass:");
	LCD_moveCursor(1,0);
    requestPassword(password);
    UART_sendString(password);

    // Receive response from Control_ECU
    uint8 response = UART_recieveByte();
    if (response == '1')
    {
    	LCD_clearScreen();
        LCD_displayString("Door is Unlocking");
        _delay_ms(15000);
        LCD_clearScreen();
        LCD_displayString("Door is Locking");
        _delay_ms(15000);
    }
    else
    {
    	LCD_clearScreen();
        LCD_displayString("Incorrect Password");
        _delay_ms(1000);
    }
}

void changePassword()
{
    uint8 password[6] = {0};
    LCD_displayString("plz enter pass:");
	LCD_moveCursor(1,0);
    requestPassword(password);
    UART_sendString(password);

    // Receive response from Control_ECU
    uint8 response = UART_recieveByte();
    if (response == '1')
    {
        createPassword();
    }
    else
    {
    	LCD_clearScreen();
        LCD_displayString("Incorrect Password");
        _delay_ms(1000);
    }
}

void requestPassword(uint8* password)
{
	uint8 i=0;
	for(i=0;i<10;i++)
	{
		password[i]= KEYPAD_getPressedKey();
		if(password[i] == '=')
		{
			break;
		}
		else
		{
			LCD_displayCharacter('*');
			_delay_ms(500);
		}
	}
}*/
/*
 * HMI_ECU.c
 *
 *  Created on: Jul 9, 2024
 *      Author: Shiko
 */
#include "lcd.h"
#include "keypad.h"
#include "uart.h"
#include "timer1.h"
#include "std_types.h"
#include<util/delay.h>


#define	ENTERY_PASSWORD		8
#define PASSWORD_SIZE		5
#define GET_READY 			0x10
#define GET_READY3 			0x30



/*****************************************************************************
 * 								Function Definitions							 *
 *****************************************************************************/

/*
 * Description :
 * Sending The Password to CONTROL_ECU By Using UART
 */
void sendPasswordByUART(uint8 *PASSWORD)
{
	uint8 i;
	for(i=0;i<PASSWORD_SIZE;i++) /* Sending Password */
	{
		UART_sendByte(PASSWORD[i]);
	}
}

/*
 * Description :
 * Receiving The Password From The User By Using Keypad
 */
void recievePasswordFromUser(uint8 *PASSWORD)
{
	uint8 i;
	for(i=0;i<ENTERY_PASSWORD;i++)
		{
			PASSWORD[i]= KEYPAD_getPressedKey(); /* Receiving The Password in an Array From Keypad Buttons */
			if(PASSWORD[i] == 13) /* 13 means Enter Button */
			{
				break;
			}
			else
			{
				LCD_displayCharacter('*'); /* Display '*' at Each Press */
				_delay_ms(500);
			}
		}
}


/*****************************************************************************
 * 								Global Variables							 *
 *****************************************************************************/

uint8 counter = 1; /* Variable To Count The Number Of Entering Wrong Password*/
uint8 STEP1 = 1; /* Flag Of Entering The System */
uint8 STEP2 = 0; /* Flag Of Entering The Main Option Menu*/
uint8 f_OPEN_DOOR =0; /* Flag When User Want To Open Door */
uint8 f_CHANGE_PASSWORD =0; /* Flag When User Want To Change Password */
uint8 WRONG_PASS = 0; /* Flag When The User Enter Wrong Password When He is At Main Option Menu */

/****************************************************************************
 * 								Global Arrays
 ****************************************************************************/
uint8 FIRST_PASS[8];
uint8 RE_PASS[8];
uint8 USER_PASS[8];
uint8 CHECK_PASS[8];

/****************************************************************************
 * 								Main Function
 ****************************************************************************/
int main()
{
	/* Configuration And Initialization Of The System */
	UART_ConfigType UART_Configurations = {BITS8,EVEN_PARITY,STOP_1BIT,BDR6};
	LCD_init();
	UART_init(&UART_Configurations);

	while(1)
	{
		LCD_clearScreen();
		/* Password Menu */
		if(STEP1==1)
		{
			/* Sending This Byte To Synchronize The Two System With Each Other */
			UART_sendByte(GET_READY);
			LCD_clearScreen();
			LCD_displayString("plz enter pass:");
			LCD_moveCursor(1,0);

			recievePasswordFromUser(FIRST_PASS); /* Receive The First Password From User To Initialize The System */

			LCD_clearScreen();
			LCD_displayStringRowColumn(0,0,"plz re-enter the");
			LCD_displayStringRowColumn(1,0,"same pass:");
			LCD_moveCursor(1,10);

			recievePasswordFromUser(RE_PASS); /* Receive The Check Password From The User By Keypad To Check On The Initialization */

			sendPasswordByUART(FIRST_PASS); /* Sending Password To CONTROL_ECU By Using UART */

			sendPasswordByUART(RE_PASS); /* Sending The Check Password */

		/* Don't Exit While(1) Until You Receive From UART Of CONTROL_ECU */
		while(1)
		{
			if(UART_recieveByte() == 'T') /* UART Of CONTROL_ECU Will Send 'T' If The Two Passwords Are Correct */
			{
				/* Go To Main Option Menu */
				STEP2=1;
				STEP1=0;
				f_OPEN_DOOR = 0;
				f_CHANGE_PASSWORD =0;
				break;
			}
			else if(UART_recieveByte() == 'F') /* UART Of CONTROL_ECU Will Send 'F' If The Two Passwords Are Incorrect */
			{
				/* User Will Still in The Password Menu Until The User Enter 2 Correct Passwords */
				STEP2=0;
				STEP1=1;
				f_OPEN_DOOR = 0;
				f_CHANGE_PASSWORD =0;
				break;
			}
		}
		}

		/* Main Option Menu */
		if(STEP2==1)
		{
			STEP2=0;
			uint8 Options_Button;
			LCD_displayStringRowColumn(0,0,"+ : Open Door   ");
			LCD_displayStringRowColumn(1,0,"- : Change Pass");
			Options_Button=KEYPAD_getPressedKey();
			_delay_ms(500);

			if(Options_Button=='+') /* If User Pressed '+' Go To Open Door Option */
			{
				UART_sendByte('+');
				f_OPEN_DOOR=1;
			}
			else if(Options_Button=='-') /* If User Pressed '-' Go To Change Password Option */
			{
				UART_sendByte('-');
				f_CHANGE_PASSWORD=1;
			}
		}

		/* Open Door Option */
		if(f_OPEN_DOOR == 1)
		{
			LCD_clearScreen();
			LCD_displayString("plz enter pass:");
			LCD_moveCursor(1,0);

			recievePasswordFromUser(USER_PASS); /* Receive The User Password  */

			sendPasswordByUART(USER_PASS); /* Sending User Password To CONTROL_ECU To Check it From EEPROM */

		/* Don't Exit While(1) Until You Receive From UART Of CONTROL_ECU */
		while(1)
		{
			if(UART_recieveByte()=='A') /* UART Of CONTROL_ECU Will Send 'A' If The User Password Similar To EEPROM Password */
			{
				/* Display On The Screen Then Go to Main Option Menu Again */
				LCD_clearScreen();
				LCD_displayString("Door Is Unlocking");
				_delay_ms(15000);
				_delay_ms(3000);
				LCD_clearScreen();
				LCD_displayString("Door is Locking");
				_delay_ms(15000);
				STEP2=1;
				STEP1=0;
				f_OPEN_DOOR = 0;
				f_CHANGE_PASSWORD =0;
				break;
			}
			else if(UART_recieveByte()=='B') /* UART Of CONTROL_ECU Will Send 'B' If The User Password Different From EEPROM Password */
			{
				/* Will Go To Wrong Password Menu */
				f_OPEN_DOOR = 0;
				f_CHANGE_PASSWORD =0;
				WRONG_PASS = 1;
				STEP2=0;
				STEP1=0;
				break;
			}
		}
		}

		/* Change Password Menu */
		if(f_CHANGE_PASSWORD == 1)
		{
			LCD_clearScreen();
			LCD_displayString("plz enter pass:");
			LCD_moveCursor(1,0);

			recievePasswordFromUser(USER_PASS); /* Receive The User Password */

			sendPasswordByUART(USER_PASS); /* Sending User Password To CONTROL_ECU To Check it From EEPROM */

		/* Don't Exit While(1) Until You Receive From UART Of CONTROL_ECU */
		while(1)
		{
			if(UART_recieveByte()=='A') /* UART Of CONTROL_ECU Will Send 'A' If The User Password Similar To EEPROM Password */
			{
				/* Go To Password Menu Again To Enter New Password */
				STEP1=1;
				STEP2=0;
				f_CHANGE_PASSWORD =0;
				f_OPEN_DOOR = 0;
				break;
			}
			else if(UART_recieveByte()=='B') /* UART Of CONTROL_ECU Will Send 'B' If The User Password Different From EEPROM Password */
			{
				/* Go To Wrong Password Menu */
				f_OPEN_DOOR = 0;
				f_CHANGE_PASSWORD =0;
				WRONG_PASS = 1;
				STEP2=0;
				STEP1=0;
				break;
			}
		}
		}

		/*Wrong Password Menu */
		if(WRONG_PASS==1)
		{
			/* Sending This Byte To Synchronize The Two System With Each Other */
			UART_sendByte(GET_READY3);
			LCD_clearScreen();
			LCD_displayString("plz enter pass:");
			LCD_moveCursor(1,0);

		/* Don't Exit While(1) Until You Receive From UART Of CONTROL_ECU */
		while(1)
		{
			recievePasswordFromUser(CHECK_PASS); /* Receive The User Password */

			sendPasswordByUART(CHECK_PASS); /* Sending User Password To CONTROL_ECU To Check it From EEPROM */

			if(UART_recieveByte()=='X') /* UART Of CONTROL_ECU Will Send 'X' If The User Password Similar To EEPROM Password */
			{
				/* Go To The Main Option Menu */
				WRONG_PASS = 0;
				counter=0;
				STEP2=1;
				STEP1=0;
				break;
			}
			else if(UART_recieveByte()=='Y') /* UART Of CONTROL_ECU Will Send 'Y' If The User Password Different From EEPROM Password */
			{
				/* You Will Still In Wrong Password Menu And Counter Of Wrong Passwords Will Increment */
				counter++;
				WRONG_PASS = 1;
				STEP2=0;
				STEP1=0;
				break;
			}
		}
			if (counter == 3) /*If The User Enters Wrong Password Three Times */
			{
				/* Will Display Error And Go To The Main Option Menu Again */
				WRONG_PASS = 0;
				counter=0;
				LCD_clearScreen();
				LCD_displayString("ERROR");
				_delay_ms(60000);
				STEP2 = 1;
			}

		}
	}
}

